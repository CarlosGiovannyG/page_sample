const mongoose = require("mongoose");
const mongooseTimezone = require("mongoose-timezone");

const propertySchema = new mongoose.Schema({
  mls_id: { type: String },
  name: { type: String },
  url: { type: String },
  json_data: {
    privateRemarks: { type: String },
    showingContactName: { type: String },
    property: {
      roof: { type: String },
      cooling: { type: String },
      style: { type: String },
      area: { type: Number },
      bathsFull: { type: Number },
      bathsHalf: { type: Number },
      stories: { type: Number },
      fireplaces: { type: Number },
      flooring: { type: String },
      heating: { type: String },
      bathrooms: { type: Number },
      foundation: { type: String },
      laundryFeatures: { type: String },
      occupantName: { type: String },
      ownerName: { type: String },
      lotDescription: { type: String },
      pool: { type: String },
      subType: { type: String },
      bedrooms: { type: Number },
      interiorFeatures: { type: String },
      lotSize: { type: String },
      areaSource: { type: Number },
      maintenanceExpense: { type: Number },
      additionalRooms: { type: Number },
      exteriorFeatures: { type: String },
      water: { type: String },
      view: { type: String },
      lotSizeArea: { type: Number },
      subdivision: { type: String },
      construction: { type: String },
      parking: {
        leased: { type: String },
        spaces: { type: Number },
        description: { type: String },
      },
      lotSizeAreaUnits: { type: String },
      type: { type: String },
      garageSpaces: { type: Number },
      bathsThreeQuarter: { type: Number },
      accessibility: { type: String },
      acres: { type: String },
      occupantType: { type: String },
      subTypeText: { type: String },
      yearBuilt: { type: Number },
    },
    mlsId: { type: Number },
    showingContactPhone: { type: Number },
    terms: { type: String },
    showingInstructions: { type: String },
    office: {
      contact: {
        email: { type: String },
        office: { type: String },
        cell: { type: Number },
      },
      name: { type: String },
      servingName: { type: String },
      brokerid: { type: String },
    },
    leaseTerm: { type: String },
    disclaimer: { type: String },
    specialListingConditions: { type: String },
    originalListPrice: { type: Number },
    address: {
      crossStreet: { type: String },
      state: { type: String },
      country: { type: String },
      postalCode: { type: String },
      streetName: { type: String },
      streetNumberText: { type: String },
      city: { type: String },
      streetNumber: { type: String },
      full: { type: String },
      unit: { type: String },
    },
    agreement: { type: String },
    listDate: { type: Date },
    agent: {
      officeMlsId: { type: String },
      lastName: { type: String },
      contact: {
        email: { type: String },
        office: { type: String },
        cell: { type: Number },
      },
      address: { type: String },
      modified: { type: String },
      firstName: { type: String },
      id: { type: String },
    },
    modified: { type: Date },
    school: {
      middleSchool: { type: String },
      highSchool: { type: String },
      elementarySchool: { type: String },
      district: { type: String },
    },
    photos: [{ type: String }],
    listPrice: { type: Number },
    internetAddressDisplay: { type: Boolean },
    listingId: { type: String },
    mls: {
      status: { type: String },
      area: { type: String },
      daysOnMarket: { type: Number },
      originalEntryTimestamp: { type: Date },
      originatingSystemName: { type: String },
      statusText: { type: String },
      areaMinor: { type: String },
    },
    internetEntireListingDisplay: { type: Boolean },
    geo: {
      county: { type: String },
      lat: { type: Number },
      lng: { type: Number },
      marketArea: { type: String },
      directions: { type: String },
    },
    tax: {
      taxYear: { type: Number },
      taxAnnualAmount: { type: Number },
      id: { type: String },
    },
    coAgent: { type: mongoose.Schema.Types.Mixed },
    sales:  { type: mongoose.Schema.Types.Mixed },
    ownership: { type: String },
    leaseType: { type: String },
    virtualTourUrl: { type: String },
    remarks: { type: String },
    association: {
      frequency: { type: String },
      fee: { type: Number },
      name: { type: String },
      amenities: { type: String },
    },
  },
  address: { type: String },
  city: { type: String },
  state: { type: String },
  postalCode: { type: String },
  subTypeText: { type: String },
  naturalPrice: { type: Number },
  property_area: { type: String },
  property_bathsFull: { type: Number },
  property_bedrooms: { type: Number },
  property_roof: { type: String },
  property_cooling: { type: String },
  property_heating: { type: String },
  property_fireplaces: { type: String },
  property_flooring: { type: String },
  property_laundryFeatures: { type: String },
  property_pool: { type: String },
  property_type: { type: String },
  property_yearBuilt: { type: String },
  property_style: { type: String },
  property_subdivision: { type: String },
  property_parking_description: { type: String },
  association_fee: { type: String },
  geo_lat: { type: String },
  geo_lng: { type: String },
  geo_county: { type: String },
  mls_statusText: { type: String },
  list_date: { type: Number },
  modified_date: { type: Number },
  estimated_month_fee: { type: String },
});

propertySchema.plugin(mongooseTimezone);

module.exports =
  mongoose.models.Property || mongoose.model("Property", propertySchema);
